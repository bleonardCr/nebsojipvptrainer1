{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ben\\\\Projects\\\\nebsojipvptrainer\\\\src\\\\components\\\\PokemonSelect.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PokemonSelect({\n  id,\n  label,\n  options = [],\n  // array of strings\n  // value is intentionally ignored so we don't persist after selection\n  value,\n  // eslint-disable-line no-unused-vars\n  onChange,\n  // (pickedLabel: string)\n  placeholder = \"Start typing�\",\n  maxSuggestions = 5\n}) {\n  _s();\n  const [term, setTerm] = useState(\"\");\n  const inputRef = useRef(null);\n\n  // ---- prefix/word-start matcher ----\n  const norm = s => String(s || \"\").toLowerCase();\n  const startsAtWord = (label, q) => {\n    const L = norm(label);\n    const Q = norm(q).trim();\n    if (!Q) return false;\n    if (L.startsWith(Q)) return true;\n    const words = L.split(/[\\s\\-()_]+/g).filter(Boolean);\n    return words.some(w => w.startsWith(Q));\n  };\n  const matches = useMemo(() => {\n    if (!term) return [];\n    return options.filter(opt => startsAtWord(opt, term));\n  }, [options, term]);\n  const primary = matches[0] || \"\"; // first/best suggestion\n  const ghost = primary ? term + primary.slice(term.length) : \"\";\n  function accept(value) {\n    if (!value) return;\n    onChange === null || onChange === void 0 ? void 0 : onChange(value);\n    setTerm(\"\"); // don�t persist after picking\n    // keep focus for fast entry\n    requestAnimationFrame(() => {\n      var _inputRef$current;\n      return (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    });\n  }\n  function handleKeyDown(e) {\n    const atEnd = inputRef.current && inputRef.current.selectionStart === inputRef.current.value.length && inputRef.current.selectionEnd === inputRef.current.value.length;\n    if ((e.key === \"Enter\" || e.key === \"Tab\") && primary) {\n      e.preventDefault();\n      accept(primary);\n    } else if (e.key === \"ArrowRight\" && atEnd && primary && primary !== term) {\n      e.preventDefault();\n      accept(primary);\n    } else if (e.key === \"Escape\") {\n      setTerm(\"\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 12,\n      maxWidth: \"100%\"\n    },\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      style: {\n        display: \"block\",\n        marginBottom: 6\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        \"aria-hidden\": \"true\",\n        tabIndex: -1,\n        value: ghost,\n        readOnly: true,\n        style: {\n          position: \"absolute\",\n          inset: 0,\n          border: \"1px solid transparent\",\n          borderRadius: 8,\n          padding: \"8px 10px\",\n          color: \"#9ca3af\",\n          // gray ghost text\n          background: \"#fff\",\n          pointerEvents: \"none\",\n          // Ensure same font/metrics as the real input\n          font: \"inherit\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: id,\n        ref: inputRef,\n        type: \"text\",\n        value: term,\n        placeholder: placeholder,\n        onChange: e => setTerm(e.target.value),\n        onKeyDown: handleKeyDown,\n        autoComplete: \"off\",\n        spellCheck: false,\n        style: {\n          width: \"100%\",\n          border: \"1px solid #d1d5db\",\n          borderRadius: 8,\n          padding: \"8px 10px\",\n          background: \"transparent\",\n          // lets ghost show through\n          position: \"relative\",\n          zIndex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), term.length >= 3 && matches.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 6,\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        gap: 6,\n        lineHeight: 1\n      },\n      children: matches.slice(0, maxSuggestions).map(m => /*#__PURE__*/_jsxDEV(\"button\", {\n        onMouseDown: e => e.preventDefault() // keep focus\n        ,\n        onClick: () => accept(m),\n        style: {\n          border: \"1px solid #e5e7eb\",\n          background: \"#f9fafb\",\n          color: \"#111\",\n          padding: \"4px 8px\",\n          borderRadius: 999,\n          fontSize: 12,\n          cursor: \"pointer\"\n        },\n        children: m\n      }, m, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(PokemonSelect, \"Wv9NTe1C5tytr2ZmK/69T1kYxJM=\");\n_c = PokemonSelect;\nvar _c;\n$RefreshReg$(_c, \"PokemonSelect\");","map":{"version":3,"names":["React","useMemo","useRef","useState","jsxDEV","_jsxDEV","PokemonSelect","id","label","options","value","onChange","placeholder","maxSuggestions","_s","term","setTerm","inputRef","norm","s","String","toLowerCase","startsAtWord","q","L","Q","trim","startsWith","words","split","filter","Boolean","some","w","matches","opt","primary","ghost","slice","length","accept","requestAnimationFrame","_inputRef$current","current","focus","handleKeyDown","e","atEnd","selectionStart","selectionEnd","key","preventDefault","style","marginBottom","maxWidth","children","htmlFor","display","fileName","_jsxFileName","lineNumber","columnNumber","position","tabIndex","readOnly","inset","border","borderRadius","padding","color","background","pointerEvents","font","ref","type","target","onKeyDown","autoComplete","spellCheck","width","zIndex","marginTop","flexWrap","gap","lineHeight","map","m","onMouseDown","onClick","fontSize","cursor","_c","$RefreshReg$"],"sources":["C:/Users/ben/Projects/nebsojipvptrainer/src/components/PokemonSelect.jsx"],"sourcesContent":["import React, { useMemo, useRef, useState } from \"react\";\r\n\r\nexport default function PokemonSelect({\r\n    id,\r\n    label,\r\n    options = [],          // array of strings\r\n    // value is intentionally ignored so we don't persist after selection\r\n    value,                  // eslint-disable-line no-unused-vars\r\n    onChange,               // (pickedLabel: string)\r\n    placeholder = \"Start typing�\",\r\n    maxSuggestions = 5,\r\n}) {\r\n    const [term, setTerm] = useState(\"\");\r\n    const inputRef = useRef(null);\r\n\r\n    // ---- prefix/word-start matcher ----\r\n    const norm = (s) => String(s || \"\").toLowerCase();\r\n    const startsAtWord = (label, q) => {\r\n        const L = norm(label);\r\n        const Q = norm(q).trim();\r\n        if (!Q) return false;\r\n        if (L.startsWith(Q)) return true;\r\n        const words = L.split(/[\\s\\-()_]+/g).filter(Boolean);\r\n        return words.some((w) => w.startsWith(Q));\r\n    };\r\n\r\n    const matches = useMemo(() => {\r\n        if (!term) return [];\r\n        return options.filter((opt) => startsAtWord(opt, term));\r\n    }, [options, term]);\r\n\r\n    const primary = matches[0] || \"\"; // first/best suggestion\r\n    const ghost = primary ? term + primary.slice(term.length) : \"\";\r\n\r\n    function accept(value) {\r\n        if (!value) return;\r\n        onChange?.(value);\r\n        setTerm(\"\"); // don�t persist after picking\r\n        // keep focus for fast entry\r\n        requestAnimationFrame(() => inputRef.current?.focus());\r\n    }\r\n\r\n    function handleKeyDown(e) {\r\n        const atEnd =\r\n            inputRef.current &&\r\n            inputRef.current.selectionStart === inputRef.current.value.length &&\r\n            inputRef.current.selectionEnd === inputRef.current.value.length;\r\n\r\n        if ((e.key === \"Enter\" || e.key === \"Tab\") && primary) {\r\n            e.preventDefault();\r\n            accept(primary);\r\n        } else if (e.key === \"ArrowRight\" && atEnd && primary && primary !== term) {\r\n            e.preventDefault();\r\n            accept(primary);\r\n        } else if (e.key === \"Escape\") {\r\n            setTerm(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{ marginBottom: 12, maxWidth: \"100%\" }}>\r\n            {label && (\r\n                <label htmlFor={id} style={{ display: \"block\", marginBottom: 6 }}>\r\n                    {label}\r\n                </label>\r\n            )}\r\n\r\n            {/* Ghost + real input layered together (no dropdown) */}\r\n            <div style={{ position: \"relative\" }}>\r\n                {/* Ghost suggestion layer */}\r\n                <input\r\n                    aria-hidden=\"true\"\r\n                    tabIndex={-1}\r\n                    value={ghost}\r\n                    readOnly\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        inset: 0,\r\n                        border: \"1px solid transparent\",\r\n                        borderRadius: 8,\r\n                        padding: \"8px 10px\",\r\n                        color: \"#9ca3af\",          // gray ghost text\r\n                        background: \"#fff\",\r\n                        pointerEvents: \"none\",\r\n                        // Ensure same font/metrics as the real input\r\n                        font: \"inherit\",\r\n                    }}\r\n                />\r\n                {/* Actual input */}\r\n                <input\r\n                    id={id}\r\n                    ref={inputRef}\r\n                    type=\"text\"\r\n                    value={term}\r\n                    placeholder={placeholder}\r\n                    onChange={(e) => setTerm(e.target.value)}\r\n                    onKeyDown={handleKeyDown}\r\n                    autoComplete=\"off\"\r\n                    spellCheck={false}\r\n                    style={{\r\n                        width: \"100%\",\r\n                        border: \"1px solid #d1d5db\",\r\n                        borderRadius: 8,\r\n                        padding: \"8px 10px\",\r\n                        background: \"transparent\",  // lets ghost show through\r\n                        position: \"relative\",\r\n                        zIndex: 1,\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            {/* Compact chips (only if 3+ chars and multiple matches) */}\r\n            {term.length >= 3 && matches.length > 1 && (\r\n                <div\r\n                    style={{\r\n                        marginTop: 6,\r\n                        display: \"flex\",\r\n                        flexWrap: \"wrap\",\r\n                        gap: 6,\r\n                        lineHeight: 1,\r\n                    }}\r\n                >\r\n                    {matches.slice(0, maxSuggestions).map((m) => (\r\n                        <button\r\n                            key={m}\r\n                            onMouseDown={(e) => e.preventDefault()} // keep focus\r\n                            onClick={() => accept(m)}\r\n                            style={{\r\n                                border: \"1px solid #e5e7eb\",\r\n                                background: \"#f9fafb\",\r\n                                color: \"#111\",\r\n                                padding: \"4px 8px\",\r\n                                borderRadius: 999,\r\n                                fontSize: 12,\r\n                                cursor: \"pointer\",\r\n                            }}\r\n                        >\r\n                            {m}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}