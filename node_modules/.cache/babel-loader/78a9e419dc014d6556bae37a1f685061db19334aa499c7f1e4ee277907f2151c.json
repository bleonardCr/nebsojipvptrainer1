{"ast":null,"code":"// /src/engine/battleEngine.js\n// Simple PvP simulation engine\n\nimport gamemaster from \"../Data/gamemaster.json\";\n\n// --- Build moves map ---\nconst MOVES = {};\nfor (const move of gamemaster.moves) {\n  MOVES[move.moveId] = move;\n}\n\n// --- Build POKEDEX map ---\nconst POKEDEX = {};\nfor (const pkmn of gamemaster.pokemon) {\n  POKEDEX[pkmn.speciesId] = pkmn;\n}\n\n// --- Utility: normalize incoming speciesId to match gamemaster keys ---\nfunction normalizeId(name) {\n  return String(name || \"\").toLowerCase().trim().replace(/[^a-z0-9]+/g, \"_\") // replace spaces, dashes, parentheses with underscores\n  .replace(/^_+|_+$/g, \"\"); // trim leading/trailing underscores\n}\n\n// --- Dummy battler if lookup fails ---\nfunction dummyBattler(pokemon) {\n  return {\n    speciesId: (pokemon === null || pokemon === void 0 ? void 0 : pokemon.speciesId) || \"unknown\",\n    types: [],\n    stats: {\n      atk: 0,\n      def: 0,\n      hp: 0\n    },\n    hp: 0,\n    energy: 0,\n    cooldown: 0,\n    shields: (pokemon === null || pokemon === void 0 ? void 0 : pokemon.shields) || 0,\n    level: (pokemon === null || pokemon === void 0 ? void 0 : pokemon.level) || 40,\n    moves: {\n      fast: {\n        energyGain: 0,\n        power: 0,\n        cooldown: 1,\n        type: \"normal\"\n      },\n      charged: []\n    }\n  };\n}\n\n// --- Create a battle-ready Pokémon object ---\nfunction createBattler(pokemon) {\n  var _base$stats, _base$stats2, _base$stats3, _base$stats4;\n  if (!pokemon || !pokemon.speciesId) {\n    console.warn(\"createBattler: Missing pokemon data\", pokemon);\n    return dummyBattler(pokemon);\n  }\n  const id = normalizeId(pokemon.speciesId);\n  const base = POKEDEX[id];\n  if (!base) {\n    console.warn(`createBattler: No POKEDEX match for \"${pokemon.speciesId}\" (normalized: \"${id}\")`);\n    return dummyBattler(pokemon);\n  }\n  const fastMoveData = MOVES[pokemon.fastMove] || {\n    energyGain: 0,\n    power: 0,\n    cooldown: 1,\n    type: \"normal\"\n  };\n  const chargedMovesData = (pokemon.chargedMoves || []).map(cid => MOVES[cid]).filter(Boolean);\n  return {\n    speciesId: base.speciesId,\n    types: base.types || [],\n    stats: {\n      atk: ((_base$stats = base.stats) === null || _base$stats === void 0 ? void 0 : _base$stats.atk) || 0,\n      def: ((_base$stats2 = base.stats) === null || _base$stats2 === void 0 ? void 0 : _base$stats2.def) || 0,\n      hp: ((_base$stats3 = base.stats) === null || _base$stats3 === void 0 ? void 0 : _base$stats3.hp) || 0\n    },\n    hp: ((_base$stats4 = base.stats) === null || _base$stats4 === void 0 ? void 0 : _base$stats4.hp) || 0,\n    energy: 0,\n    cooldown: 0,\n    shields: pokemon.shields || 0,\n    level: pokemon.level || 40,\n    moves: {\n      fast: fastMoveData,\n      charged: chargedMovesData\n    }\n  };\n}\n\n// --- Type effectiveness chart (partial example) ---\nconst TYPE_EFFECTIVENESS = {\n  normal: {\n    rock: 0.625,\n    ghost: 0.39,\n    steel: 0.625\n  },\n  fighting: {\n    normal: 1.6,\n    rock: 1.6,\n    steel: 1.6,\n    ice: 1.6,\n    dark: 1.6,\n    flying: 0.625,\n    poison: 0.625,\n    psychic: 0.625,\n    bug: 0.625,\n    ghost: 0.39,\n    fairy: 0.625\n  }\n  // ... add the rest\n};\n\n// --- Get type multiplier ---\nfunction typeMultiplier(moveType, defenderTypes) {\n  return defenderTypes.reduce((mult, type) => {\n    if (TYPE_EFFECTIVENESS[moveType] && TYPE_EFFECTIVENESS[moveType][type]) {\n      return mult * TYPE_EFFECTIVENESS[moveType][type];\n    }\n    return mult;\n  }, 1);\n}\n\n// --- Damage formula (simplified) ---\nfunction calculateDamage(attacker, defender, move) {\n  if (!move) return 0;\n  const atk = attacker.stats.atk;\n  const def = defender.stats.def;\n  const stab = attacker.types.includes(move.type) ? 1.2 : 1;\n  const effectiveness = typeMultiplier(move.type, defender.types);\n  return Math.max(1, Math.floor(0.5 * atk * move.power / def * stab * effectiveness) + 1);\n}\n\n// --- Simulate a single duel ---\nexport function simulateBattle(p1Data, p2Data) {\n  const p1 = createBattler(p1Data);\n  const p2 = createBattler(p2Data);\n  let turns = 0;\n  while (p1.hp > 0 && p2.hp > 0 && turns < 500) {\n    takeTurn(p1, p2);\n    if (p2.hp <= 0) break; // early exit if fainted\n    takeTurn(p2, p1);\n    turns++;\n  }\n  let winner = null;\n  if (p1.hp <= 0 && p2.hp <= 0) winner = \"draw\";else if (p1.hp <= 0) winner = \"p2\";else if (p2.hp <= 0) winner = \"p1\";\n  return {\n    winner,\n    p1Hp: Math.max(0, p1.hp),\n    p2Hp: Math.max(0, p2.hp)\n  };\n}\n\n// --- Take a turn ---\nfunction takeTurn(attacker, defender) {\n  if (attacker.cooldown > 0) {\n    attacker.cooldown--;\n    return;\n  }\n\n  // Try charged move if enough energy\n  const charged = attacker.moves.charged.find(m => attacker.energy >= m.energy);\n  if (charged) {\n    if (defender.shields > 0) {\n      defender.shields--;\n    } else {\n      defender.hp -= calculateDamage(attacker, defender, charged);\n    }\n    attacker.energy -= charged.energy;\n    attacker.cooldown = charged.cooldown || 1;\n    return;\n  }\n\n  // Otherwise use fast move\n  const fast = attacker.moves.fast;\n  defender.hp -= calculateDamage(attacker, defender, fast);\n  attacker.energy += fast.energyGain;\n  attacker.cooldown = fast.cooldown || 1;\n}","map":{"version":3,"names":["gamemaster","MOVES","move","moves","moveId","POKEDEX","pkmn","pokemon","speciesId","normalizeId","name","String","toLowerCase","trim","replace","dummyBattler","types","stats","atk","def","hp","energy","cooldown","shields","level","fast","energyGain","power","type","charged","createBattler","_base$stats","_base$stats2","_base$stats3","_base$stats4","console","warn","id","base","fastMoveData","fastMove","chargedMovesData","chargedMoves","map","cid","filter","Boolean","TYPE_EFFECTIVENESS","normal","rock","ghost","steel","fighting","ice","dark","flying","poison","psychic","bug","fairy","typeMultiplier","moveType","defenderTypes","reduce","mult","calculateDamage","attacker","defender","stab","includes","effectiveness","Math","max","floor","simulateBattle","p1Data","p2Data","p1","p2","turns","takeTurn","winner","p1Hp","p2Hp","find","m"],"sources":["C:/Users/ben/Projects/nebsojipvptrainer/src/engine/battleEngine.js"],"sourcesContent":["// /src/engine/battleEngine.js\r\n// Simple PvP simulation engine\r\n\r\nimport gamemaster from \"../Data/gamemaster.json\";\r\n\r\n// --- Build moves map ---\r\nconst MOVES = {};\r\nfor (const move of gamemaster.moves) {\r\n    MOVES[move.moveId] = move;\r\n}\r\n\r\n// --- Build POKEDEX map ---\r\nconst POKEDEX = {};\r\nfor (const pkmn of gamemaster.pokemon) {\r\n    POKEDEX[pkmn.speciesId] = pkmn;\r\n}\r\n\r\n// --- Utility: normalize incoming speciesId to match gamemaster keys ---\r\nfunction normalizeId(name) {\r\n    return String(name || \"\")\r\n        .toLowerCase()\r\n        .trim()\r\n        .replace(/[^a-z0-9]+/g, \"_\")   // replace spaces, dashes, parentheses with underscores\r\n        .replace(/^_+|_+$/g, \"\");      // trim leading/trailing underscores\r\n}\r\n\r\n// --- Dummy battler if lookup fails ---\r\nfunction dummyBattler(pokemon) {\r\n    return {\r\n        speciesId: pokemon?.speciesId || \"unknown\",\r\n        types: [],\r\n        stats: { atk: 0, def: 0, hp: 0 },\r\n        hp: 0,\r\n        energy: 0,\r\n        cooldown: 0,\r\n        shields: pokemon?.shields || 0,\r\n        level: pokemon?.level || 40,\r\n        moves: { fast: { energyGain: 0, power: 0, cooldown: 1, type: \"normal\" }, charged: [] }\r\n    };\r\n}\r\n\r\n// --- Create a battle-ready Pokémon object ---\r\nfunction createBattler(pokemon) {\r\n    if (!pokemon || !pokemon.speciesId) {\r\n        console.warn(\"createBattler: Missing pokemon data\", pokemon);\r\n        return dummyBattler(pokemon);\r\n    }\r\n\r\n    const id = normalizeId(pokemon.speciesId);\r\n    const base = POKEDEX[id];\r\n\r\n    if (!base) {\r\n        console.warn(`createBattler: No POKEDEX match for \"${pokemon.speciesId}\" (normalized: \"${id}\")`);\r\n        return dummyBattler(pokemon);\r\n    }\r\n\r\n    const fastMoveData = MOVES[pokemon.fastMove] || { energyGain: 0, power: 0, cooldown: 1, type: \"normal\" };\r\n    const chargedMovesData = (pokemon.chargedMoves || [])\r\n        .map(cid => MOVES[cid])\r\n        .filter(Boolean);\r\n\r\n    return {\r\n        speciesId: base.speciesId,\r\n        types: base.types || [],\r\n        stats: {\r\n            atk: base.stats?.atk || 0,\r\n            def: base.stats?.def || 0,\r\n            hp: base.stats?.hp || 0\r\n        },\r\n        hp: base.stats?.hp || 0,\r\n        energy: 0,\r\n        cooldown: 0,\r\n        shields: pokemon.shields || 0,\r\n        level: pokemon.level || 40,\r\n        moves: {\r\n            fast: fastMoveData,\r\n            charged: chargedMovesData\r\n        }\r\n    };\r\n}\r\n\r\n// --- Type effectiveness chart (partial example) ---\r\nconst TYPE_EFFECTIVENESS = {\r\n    normal: { rock: 0.625, ghost: 0.39, steel: 0.625 },\r\n    fighting: { normal: 1.6, rock: 1.6, steel: 1.6, ice: 1.6, dark: 1.6, flying: 0.625, poison: 0.625, psychic: 0.625, bug: 0.625, ghost: 0.39, fairy: 0.625 },\r\n    // ... add the rest\r\n};\r\n\r\n// --- Get type multiplier ---\r\nfunction typeMultiplier(moveType, defenderTypes) {\r\n    return defenderTypes.reduce((mult, type) => {\r\n        if (TYPE_EFFECTIVENESS[moveType] && TYPE_EFFECTIVENESS[moveType][type]) {\r\n            return mult * TYPE_EFFECTIVENESS[moveType][type];\r\n        }\r\n        return mult;\r\n    }, 1);\r\n}\r\n\r\n// --- Damage formula (simplified) ---\r\nfunction calculateDamage(attacker, defender, move) {\r\n    if (!move) return 0;\r\n    const atk = attacker.stats.atk;\r\n    const def = defender.stats.def;\r\n    const stab = attacker.types.includes(move.type) ? 1.2 : 1;\r\n    const effectiveness = typeMultiplier(move.type, defender.types);\r\n    return Math.max(1, Math.floor(((0.5 * atk * move.power) / def) * stab * effectiveness) + 1);\r\n}\r\n\r\n// --- Simulate a single duel ---\r\nexport function simulateBattle(p1Data, p2Data) {\r\n    const p1 = createBattler(p1Data);\r\n    const p2 = createBattler(p2Data);\r\n\r\n    let turns = 0;\r\n    while (p1.hp > 0 && p2.hp > 0 && turns < 500) {\r\n        takeTurn(p1, p2);\r\n        if (p2.hp <= 0) break; // early exit if fainted\r\n        takeTurn(p2, p1);\r\n        turns++;\r\n    }\r\n\r\n    let winner = null;\r\n    if (p1.hp <= 0 && p2.hp <= 0) winner = \"draw\";\r\n    else if (p1.hp <= 0) winner = \"p2\";\r\n    else if (p2.hp <= 0) winner = \"p1\";\r\n\r\n    return {\r\n        winner,\r\n        p1Hp: Math.max(0, p1.hp),\r\n        p2Hp: Math.max(0, p2.hp)\r\n    };\r\n}\r\n\r\n// --- Take a turn ---\r\nfunction takeTurn(attacker, defender) {\r\n    if (attacker.cooldown > 0) {\r\n        attacker.cooldown--;\r\n        return;\r\n    }\r\n\r\n    // Try charged move if enough energy\r\n    const charged = attacker.moves.charged.find(m => attacker.energy >= m.energy);\r\n    if (charged) {\r\n        if (defender.shields > 0) {\r\n            defender.shields--;\r\n        } else {\r\n            defender.hp -= calculateDamage(attacker, defender, charged);\r\n        }\r\n        attacker.energy -= charged.energy;\r\n        attacker.cooldown = charged.cooldown || 1;\r\n        return;\r\n    }\r\n\r\n    // Otherwise use fast move\r\n    const fast = attacker.moves.fast;\r\n    defender.hp -= calculateDamage(attacker, defender, fast);\r\n    attacker.energy += fast.energyGain;\r\n    attacker.cooldown = fast.cooldown || 1;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}