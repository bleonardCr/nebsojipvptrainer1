{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ben\\\\Projects\\\\nebsojipvptrainer\\\\src\\\\components\\\\PokemonSelect.jsx\",\n  _s = $RefreshSig$();\n// src/components/PokemonSelect.jsx\nimport React, { useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PokemonSelect({\n  id,\n  label,\n  options = [],\n  // array of strings (Pok�mon labels)\n  value,\n  // not used (we don't persist after select)\n  onChange,\n  // called with the chosen label\n  placeholder = \"Start typing�\",\n  maxSuggestions = 5\n}) {\n  _s();\n  const [term, setTerm] = useState(\"\");\n\n  // Normalize and prefix-at-word matcher\n  const norm = s => String(s || \"\").toLowerCase();\n  const startsAtWord = (label, q) => {\n    const L = norm(label);\n    const Q = norm(q).trim();\n    if (!Q) return false;\n    if (L.startsWith(Q)) return true;\n    return L.split(/[\\s\\-()_]+/g).some(w => w.startsWith(Q));\n  };\n\n  // Filter options only when the user has typed something\n  const filtered = useMemo(() => {\n    if (!term) return [];\n    return options.filter(o => startsAtWord(o, term)).slice(0, maxSuggestions);\n  }, [options, term, maxSuggestions]);\n  const exactMatch = useMemo(() => {\n    const t = norm(term);\n    return options.find(o => norm(o) === t) || null;\n  }, [options, term]);\n  function accept(label) {\n    if (!label) return;\n    onChange === null || onChange === void 0 ? void 0 : onChange(label);\n    setTerm(\"\"); // do not persist selection in the box\n  }\n  function handleChange(e) {\n    const v = e.target.value;\n    setTerm(v);\n    // If the user picked an exact option from the datalist, accept and clear\n    const exact = options.find(o => o === v);\n    if (exact) accept(exact);\n  }\n  function handleKeyDown(e) {\n    // Quick-accept: Enter/Tab when there is a single plausible match\n    if ((e.key === \"Enter\" || e.key === \"Tab\") && filtered.length === 1) {\n      e.preventDefault();\n      accept(filtered[0]);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 12\n    },\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      style: {\n        display: \"block\",\n        marginBottom: 6\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: id,\n      list: `${id}-list`,\n      value: term,\n      placeholder: placeholder,\n      onChange: handleChange,\n      onKeyDown: handleKeyDown,\n      autoComplete: \"off\",\n      style: {\n        width: 320,\n        // same compact look as your last working version\n        padding: 8,\n        border: \"1px solid #d1d5db\",\n        borderRadius: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n      id: `${id}-list`,\n      children: filtered.map(name => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: name\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(PokemonSelect, \"eiU6LM19kQdCkKX5g2VTMp/s6vg=\");\n_c = PokemonSelect;\nvar _c;\n$RefreshReg$(_c, \"PokemonSelect\");","map":{"version":3,"names":["React","useMemo","useState","jsxDEV","_jsxDEV","PokemonSelect","id","label","options","value","onChange","placeholder","maxSuggestions","_s","term","setTerm","norm","s","String","toLowerCase","startsAtWord","q","L","Q","trim","startsWith","split","some","w","filtered","filter","o","slice","exactMatch","t","find","accept","handleChange","e","v","target","exact","handleKeyDown","key","length","preventDefault","style","marginBottom","children","htmlFor","display","fileName","_jsxFileName","lineNumber","columnNumber","list","onKeyDown","autoComplete","width","padding","border","borderRadius","map","name","_c","$RefreshReg$"],"sources":["C:/Users/ben/Projects/nebsojipvptrainer/src/components/PokemonSelect.jsx"],"sourcesContent":["// src/components/PokemonSelect.jsx\r\nimport React, { useMemo, useState } from \"react\";\r\n\r\nexport default function PokemonSelect({\r\n    id,\r\n    label,\r\n    options = [],          // array of strings (Pok�mon labels)\r\n    value,                 // not used (we don't persist after select)\r\n    onChange,              // called with the chosen label\r\n    placeholder = \"Start typing�\",\r\n    maxSuggestions = 5,\r\n}) {\r\n    const [term, setTerm] = useState(\"\");\r\n\r\n    // Normalize and prefix-at-word matcher\r\n    const norm = (s) => String(s || \"\").toLowerCase();\r\n    const startsAtWord = (label, q) => {\r\n        const L = norm(label);\r\n        const Q = norm(q).trim();\r\n        if (!Q) return false;\r\n        if (L.startsWith(Q)) return true;\r\n        return L.split(/[\\s\\-()_]+/g).some((w) => w.startsWith(Q));\r\n    };\r\n\r\n    // Filter options only when the user has typed something\r\n    const filtered = useMemo(() => {\r\n        if (!term) return [];\r\n        return options.filter((o) => startsAtWord(o, term)).slice(0, maxSuggestions);\r\n    }, [options, term, maxSuggestions]);\r\n\r\n    const exactMatch = useMemo(() => {\r\n        const t = norm(term);\r\n        return options.find((o) => norm(o) === t) || null;\r\n    }, [options, term]);\r\n\r\n    function accept(label) {\r\n        if (!label) return;\r\n        onChange?.(label);\r\n        setTerm(\"\"); // do not persist selection in the box\r\n    }\r\n\r\n    function handleChange(e) {\r\n        const v = e.target.value;\r\n        setTerm(v);\r\n        // If the user picked an exact option from the datalist, accept and clear\r\n        const exact = options.find((o) => o === v);\r\n        if (exact) accept(exact);\r\n    }\r\n\r\n    function handleKeyDown(e) {\r\n        // Quick-accept: Enter/Tab when there is a single plausible match\r\n        if ((e.key === \"Enter\" || e.key === \"Tab\") && filtered.length === 1) {\r\n            e.preventDefault();\r\n            accept(filtered[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{ marginBottom: 12 }}>\r\n            {label && (\r\n                <label htmlFor={id} style={{ display: \"block\", marginBottom: 6 }}>\r\n                    {label}\r\n                </label>\r\n            )}\r\n\r\n            <input\r\n                id={id}\r\n                list={`${id}-list`}\r\n                value={term}\r\n                placeholder={placeholder}\r\n                onChange={handleChange}\r\n                onKeyDown={handleKeyDown}\r\n                autoComplete=\"off\"\r\n                style={{\r\n                    width: 320,            // same compact look as your last working version\r\n                    padding: 8,\r\n                    border: \"1px solid #d1d5db\",\r\n                    borderRadius: 8,\r\n                }}\r\n            />\r\n\r\n            {/* Native datalist; empty until the user types */}\r\n            <datalist id={`${id}-list`}>\r\n                {filtered.map((name) => (\r\n                    <option key={name} value={name} />\r\n                ))}\r\n            </datalist>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}