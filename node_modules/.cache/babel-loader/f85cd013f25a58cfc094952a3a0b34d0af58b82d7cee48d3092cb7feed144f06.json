{"ast":null,"code":"// battleCalc.js\n// Nebsoji PvP Trainer battle calculation logic\n\nlet SPECIES = {};\nlet MOVES = {};\nfunction canonMoveId(id) {\n  if (!id) return \"\";\n  return String(id).toUpperCase().replace(/[^A-Z0-9]/g, \"_\").replace(/_+/g, \"_\").replace(/^_+|_+$/g, \"\");\n}\nfunction normType(type) {\n  if (!type) return null;\n  return String(type).replace(/POKEMON_TYPE_/i, \"\").replace(/_/g, \"\").replace(/^\\w/, c => c.toUpperCase());\n}\nfunction num(val, fallback = 0) {\n  const n = Number(val);\n  return isNaN(n) ? fallback : n;\n}\nexport function buildSpeciesBook(gm) {\n  var _gm$data;\n  const pools = [gm === null || gm === void 0 ? void 0 : gm.pokemon, gm === null || gm === void 0 ? void 0 : gm.pokemonSettings, gm === null || gm === void 0 ? void 0 : gm.pokemonList, gm === null || gm === void 0 ? void 0 : (_gm$data = gm.data) === null || _gm$data === void 0 ? void 0 : _gm$data.pokemon, gm === null || gm === void 0 ? void 0 : gm.templates].filter(Boolean);\n  const out = {};\n  for (const list of pools) {\n    for (const p of list) {\n      const id = p.speciesId || p.pokemonId || p.templateId || p.name;\n      if (!id) continue;\n      const cid = String(id).toLowerCase();\n      out[cid] = p;\n    }\n  }\n  return out;\n}\nexport function buildMoveBook(gm) {\n  var _gm$data2, _gm$data3;\n  SPECIES = buildSpeciesBook(gm);\n  const pools = [gm === null || gm === void 0 ? void 0 : gm.moves, gm === null || gm === void 0 ? void 0 : gm.combatMoves, gm === null || gm === void 0 ? void 0 : (_gm$data2 = gm.data) === null || _gm$data2 === void 0 ? void 0 : _gm$data2.moves, gm === null || gm === void 0 ? void 0 : (_gm$data3 = gm.data) === null || _gm$data3 === void 0 ? void 0 : _gm$data3.combatMoves, gm === null || gm === void 0 ? void 0 : gm.moveList].filter(Boolean);\n  const out = {};\n  for (const list of pools) {\n    for (const m of list) {\n      var _ref, _ref2, _ref3, _ref4, _m$moveId, _ref5, _ref6, _m$pvpPower, _ref7, _m$durationTurns;\n      const rawId = (_ref = (_ref2 = (_ref3 = (_ref4 = (_m$moveId = m.moveId) !== null && _m$moveId !== void 0 ? _m$moveId : m.id) !== null && _ref4 !== void 0 ? _ref4 : m.uniqueId) !== null && _ref3 !== void 0 ? _ref3 : m.templateId) !== null && _ref2 !== void 0 ? _ref2 : m.name) !== null && _ref !== void 0 ? _ref : \"\";\n      const id = canonMoveId(rawId);\n      if (!id) continue;\n      const type = normType(m.type || m.pokemonType || m.moveType) || \"Normal\";\n      const power = num((_ref5 = (_ref6 = (_m$pvpPower = m.pvpPower) !== null && _m$pvpPower !== void 0 ? _m$pvpPower : m.power) !== null && _ref6 !== void 0 ? _ref6 : m.combatPower) !== null && _ref5 !== void 0 ? _ref5 : m.damage, 0);\n      let kind = \"fast\";\n      let energyGain = 0;\n      let energyCost = 0;\n      let turns = 0;\n      if (m.energyDelta != null) {\n        const ed = num(m.energyDelta, 0);\n        if (ed > 0) {\n          kind = \"fast\";\n          energyGain = ed;\n        }\n        if (ed < 0) {\n          kind = \"charged\";\n          energyCost = Math.abs(ed);\n        }\n      }\n      if (m.energyGain != null) {\n        kind = \"fast\";\n        energyGain = num(m.energyGain, 0);\n      }\n      if (m.energy != null) {\n        kind = \"charged\";\n        energyCost = Math.abs(num(m.energy, 0));\n      }\n      turns = num((_ref7 = (_m$durationTurns = m.durationTurns) !== null && _m$durationTurns !== void 0 ? _m$durationTurns : m.turns) !== null && _ref7 !== void 0 ? _ref7 : m.cooldownTurns, kind === \"fast\" ? 1 : 0);\n      if (kind === \"fast\") {\n        turns = Math.max(1, Math.floor(turns) || 1);\n      }\n\n      // Fallback defaults\n      if (kind === \"fast\" && energyGain <= 0) {\n        console.warn(`[PvP] fast move ${id} missing energyGain; using fallback 8.`);\n        energyGain = 8;\n      }\n      if (kind === \"charged\" && energyCost <= 0) {\n        console.warn(`[PvP] charged move ${id} missing energy cost; using fallback 45.`);\n        energyCost = 45;\n      }\n      const move = {\n        id,\n        kind,\n        type,\n        power,\n        energyGain,\n        energyCost,\n        turns\n      };\n      if (!out[id] || power > out[id].power) out[id] = move;\n    }\n  }\n  MOVES = out;\n  return out;\n}\nfunction enrichSide(src) {\n  const fastId = canonMoveId(src.fastMove);\n  const fast = MOVES[fastId] || null;\n  if (!fast) console.warn(`[PvP] fast move not found for ${src.name || src.speciesId}:`, src.fastMove);\n  const charged = (src.chargedMoves || []).map(canonMoveId).map(id => {\n    const mv = MOVES[id];\n    if (!mv) console.warn(`[PvP] charged move not found for ${src.name || src.speciesId}:`, id);\n    return mv;\n  }).filter(Boolean);\n  return {\n    ...src,\n    fast,\n    charged\n  };\n}\nexport function simulateDuel(p1src, p2src, shields1 = 0, shields2 = 0) {\n  const p1 = enrichSide(p1src);\n  const p2 = enrichSide(p2src);\n  let hp1 = 100,\n    hp2 = 100;\n  let energy1 = 0,\n    energy2 = 0;\n  let s1 = shields1,\n    s2 = shields2;\n  let turn = 0;\n  const maxTurns = 200; // safety cap\n\n  while (hp1 > 0 && hp2 > 0 && turn < maxTurns) {\n    turn++;\n\n    // p1 gains energy from fast move\n    energy1 += p1.fast.energyGain;\n    // p2 gains energy\n    energy2 += p2.fast.energyGain;\n\n    // try to throw charged if enough energy\n    if (p1.charged.length && energy1 >= p1.charged[0].energyCost) {\n      if (s2 > 0) {\n        s2--;\n        energy1 -= p1.charged[0].energyCost;\n      } else {\n        hp2 -= p1.charged[0].power / 2; // arbitrary scaling\n        energy1 -= p1.charged[0].energyCost;\n      }\n    } else {\n      hp2 -= p1.fast.power / 5;\n    }\n    if (p2.charged.length && energy2 >= p2.charged[0].energyCost) {\n      if (s1 > 0) {\n        s1--;\n        energy2 -= p2.charged[0].energyCost;\n      } else {\n        hp1 -= p2.charged[0].power / 2;\n        energy2 -= p2.charged[0].energyCost;\n      }\n    } else {\n      hp1 -= p2.fast.power / 5;\n    }\n  }\n  return {\n    p1hp: Math.max(0, hp1),\n    p2hp: Math.max(0, hp2),\n    p1shields: s1,\n    p2shields: s2,\n    turns: turn\n  };\n}","map":{"version":3,"names":["SPECIES","MOVES","canonMoveId","id","String","toUpperCase","replace","normType","type","c","num","val","fallback","n","Number","isNaN","buildSpeciesBook","gm","_gm$data","pools","pokemon","pokemonSettings","pokemonList","data","templates","filter","Boolean","out","list","p","speciesId","pokemonId","templateId","name","cid","toLowerCase","buildMoveBook","_gm$data2","_gm$data3","moves","combatMoves","moveList","m","_ref","_ref2","_ref3","_ref4","_m$moveId","_ref5","_ref6","_m$pvpPower","_ref7","_m$durationTurns","rawId","moveId","uniqueId","pokemonType","moveType","power","pvpPower","combatPower","damage","kind","energyGain","energyCost","turns","energyDelta","ed","Math","abs","energy","durationTurns","cooldownTurns","max","floor","console","warn","move","enrichSide","src","fastId","fastMove","fast","charged","chargedMoves","map","mv","simulateDuel","p1src","p2src","shields1","shields2","p1","p2","hp1","hp2","energy1","energy2","s1","s2","turn","maxTurns","length","p1hp","p2hp","p1shields","p2shields"],"sources":["C:/Users/ben/Projects/nebsojipvptrainer/src/battleCalc.js"],"sourcesContent":["// battleCalc.js\r\n// Nebsoji PvP Trainer battle calculation logic\r\n\r\nlet SPECIES = {};\r\nlet MOVES = {};\r\n\r\nfunction canonMoveId(id) {\r\n    if (!id) return \"\";\r\n    return String(id)\r\n        .toUpperCase()\r\n        .replace(/[^A-Z0-9]/g, \"_\")\r\n        .replace(/_+/g, \"_\")\r\n        .replace(/^_+|_+$/g, \"\");\r\n}\r\n\r\nfunction normType(type) {\r\n    if (!type) return null;\r\n    return String(type)\r\n        .replace(/POKEMON_TYPE_/i, \"\")\r\n        .replace(/_/g, \"\")\r\n        .replace(/^\\w/, c => c.toUpperCase());\r\n}\r\n\r\nfunction num(val, fallback = 0) {\r\n    const n = Number(val);\r\n    return isNaN(n) ? fallback : n;\r\n}\r\n\r\nexport function buildSpeciesBook(gm) {\r\n    const pools = [\r\n        gm?.pokemon, gm?.pokemonSettings, gm?.pokemonList,\r\n        gm?.data?.pokemon, gm?.templates\r\n    ].filter(Boolean);\r\n\r\n    const out = {};\r\n    for (const list of pools) {\r\n        for (const p of list) {\r\n            const id = p.speciesId || p.pokemonId || p.templateId || p.name;\r\n            if (!id) continue;\r\n\r\n            const cid = String(id).toLowerCase();\r\n            out[cid] = p;\r\n        }\r\n    }\r\n    return out;\r\n}\r\n\r\nexport function buildMoveBook(gm) {\r\n    SPECIES = buildSpeciesBook(gm);\r\n\r\n    const pools = [\r\n        gm?.moves, gm?.combatMoves,\r\n        gm?.data?.moves, gm?.data?.combatMoves,\r\n        gm?.moveList\r\n    ].filter(Boolean);\r\n\r\n    const out = {};\r\n\r\n    for (const list of pools) {\r\n        for (const m of list) {\r\n            const rawId = m.moveId ?? m.id ?? m.uniqueId ?? m.templateId ?? m.name ?? \"\";\r\n            const id = canonMoveId(rawId);\r\n            if (!id) continue;\r\n\r\n            const type = normType(m.type || m.pokemonType || m.moveType) || \"Normal\";\r\n            const power = num(m.pvpPower ?? m.power ?? m.combatPower ?? m.damage, 0);\r\n\r\n            let kind = \"fast\";\r\n            let energyGain = 0;\r\n            let energyCost = 0;\r\n            let turns = 0;\r\n\r\n            if (m.energyDelta != null) {\r\n                const ed = num(m.energyDelta, 0);\r\n                if (ed > 0) { kind = \"fast\"; energyGain = ed; }\r\n                if (ed < 0) { kind = \"charged\"; energyCost = Math.abs(ed); }\r\n            }\r\n            if (m.energyGain != null) { kind = \"fast\"; energyGain = num(m.energyGain, 0); }\r\n            if (m.energy != null) { kind = \"charged\"; energyCost = Math.abs(num(m.energy, 0)); }\r\n\r\n            turns = num(m.durationTurns ?? m.turns ?? m.cooldownTurns, kind === \"fast\" ? 1 : 0);\r\n            if (kind === \"fast\") { turns = Math.max(1, Math.floor(turns) || 1); }\r\n\r\n            // Fallback defaults\r\n            if (kind === \"fast\" && energyGain <= 0) {\r\n                console.warn(`[PvP] fast move ${id} missing energyGain; using fallback 8.`);\r\n                energyGain = 8;\r\n            }\r\n            if (kind === \"charged\" && energyCost <= 0) {\r\n                console.warn(`[PvP] charged move ${id} missing energy cost; using fallback 45.`);\r\n                energyCost = 45;\r\n            }\r\n\r\n            const move = { id, kind, type, power, energyGain, energyCost, turns };\r\n            if (!out[id] || power > out[id].power) out[id] = move;\r\n        }\r\n    }\r\n\r\n    MOVES = out;\r\n    return out;\r\n}\r\n\r\nfunction enrichSide(src) {\r\n    const fastId = canonMoveId(src.fastMove);\r\n    const fast = MOVES[fastId] || null;\r\n    if (!fast) console.warn(`[PvP] fast move not found for ${src.name || src.speciesId}:`, src.fastMove);\r\n\r\n    const charged = (src.chargedMoves || [])\r\n        .map(canonMoveId)\r\n        .map(id => {\r\n            const mv = MOVES[id];\r\n            if (!mv) console.warn(`[PvP] charged move not found for ${src.name || src.speciesId}:`, id);\r\n            return mv;\r\n        })\r\n        .filter(Boolean);\r\n\r\n    return {\r\n        ...src,\r\n        fast,\r\n        charged\r\n    };\r\n}\r\n\r\nexport function simulateDuel(p1src, p2src, shields1 = 0, shields2 = 0) {\r\n    const p1 = enrichSide(p1src);\r\n    const p2 = enrichSide(p2src);\r\n\r\n    let hp1 = 100, hp2 = 100;\r\n    let energy1 = 0, energy2 = 0;\r\n    let s1 = shields1, s2 = shields2;\r\n\r\n    let turn = 0;\r\n    const maxTurns = 200; // safety cap\r\n\r\n    while (hp1 > 0 && hp2 > 0 && turn < maxTurns) {\r\n        turn++;\r\n\r\n        // p1 gains energy from fast move\r\n        energy1 += p1.fast.energyGain;\r\n        // p2 gains energy\r\n        energy2 += p2.fast.energyGain;\r\n\r\n        // try to throw charged if enough energy\r\n        if (p1.charged.length && energy1 >= p1.charged[0].energyCost) {\r\n            if (s2 > 0) {\r\n                s2--;\r\n                energy1 -= p1.charged[0].energyCost;\r\n            } else {\r\n                hp2 -= (p1.charged[0].power / 2); // arbitrary scaling\r\n                energy1 -= p1.charged[0].energyCost;\r\n            }\r\n        } else {\r\n            hp2 -= (p1.fast.power / 5);\r\n        }\r\n\r\n        if (p2.charged.length && energy2 >= p2.charged[0].energyCost) {\r\n            if (s1 > 0) {\r\n                s1--;\r\n                energy2 -= p2.charged[0].energyCost;\r\n            } else {\r\n                hp1 -= (p2.charged[0].power / 2);\r\n                energy2 -= p2.charged[0].energyCost;\r\n            }\r\n        } else {\r\n            hp1 -= (p2.fast.power / 5);\r\n        }\r\n    }\r\n\r\n    return {\r\n        p1hp: Math.max(0, hp1),\r\n        p2hp: Math.max(0, hp2),\r\n        p1shields: s1,\r\n        p2shields: s2,\r\n        turns: turn\r\n    };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}