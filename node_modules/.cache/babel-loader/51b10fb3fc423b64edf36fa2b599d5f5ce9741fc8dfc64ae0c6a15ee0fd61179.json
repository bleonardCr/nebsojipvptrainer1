{"ast":null,"code":"// src/lib/pokeList.js\nexport function humanize(speciesId) {\n  if (!speciesId) return \"\";\n  const parts = speciesId.split(\"_\");\n  const base = parts.shift() || \"\";\n  const titled = s => s ? s.charAt(0).toUpperCase() + s.slice(1) : \"\";\n  const baseLabel = titled(base.replace(\"-\", \" \"));\n  if (!parts.length) return baseLabel;\n  return `${baseLabel} (${parts.map(p => titled(p.replace(\"-\", \" \"))).join(\" \")})`;\n}\nexport function dedupeBySpecies(arr) {\n  const seen = new Set();\n  return (arr || []).filter(x => {\n    const id = x === null || x === void 0 ? void 0 : x.speciesId;\n    if (!id) return false;\n    if (seen.has(id)) return false;\n    seen.add(id);\n    return true;\n  });\n}\nexport function toOptions(list) {\n  return list.map(x => ({\n    value: x.speciesId,\n    label: humanize(x.speciesId)\n  })).sort((a, b) => a.label.localeCompare(b.label));\n}\nexport function indexById(list) {\n  const map = Object.create(null);\n  (list || []).forEach(x => {\n    if (x !== null && x !== void 0 && x.speciesId) map[x.speciesId] = x;\n  });\n  return map;\n}","map":{"version":3,"names":["humanize","speciesId","parts","split","base","shift","titled","s","charAt","toUpperCase","slice","baseLabel","replace","length","map","p","join","dedupeBySpecies","arr","seen","Set","filter","x","id","has","add","toOptions","list","value","label","sort","a","b","localeCompare","indexById","Object","create","forEach"],"sources":["C:/Users/ben/Projects/nebsojipvptrainer/src/lib/pokeList.js"],"sourcesContent":["// src/lib/pokeList.js\r\nexport function humanize(speciesId) {\r\n    if (!speciesId) return \"\";\r\n    const parts = speciesId.split(\"_\");\r\n    const base = parts.shift() || \"\";\r\n    const titled = s => (s ? s.charAt(0).toUpperCase() + s.slice(1) : \"\");\r\n    const baseLabel = titled(base.replace(\"-\", \" \"));\r\n    if (!parts.length) return baseLabel;\r\n    return `${baseLabel} (${parts.map(p => titled(p.replace(\"-\", \" \"))).join(\" \")})`;\r\n}\r\n\r\nexport function dedupeBySpecies(arr) {\r\n    const seen = new Set();\r\n    return (arr || []).filter(x => {\r\n        const id = x?.speciesId;\r\n        if (!id) return false;\r\n        if (seen.has(id)) return false;\r\n        seen.add(id);\r\n        return true;\r\n    });\r\n}\r\n\r\nexport function toOptions(list) {\r\n    return list\r\n        .map(x => ({ value: x.speciesId, label: humanize(x.speciesId) }))\r\n        .sort((a, b) => a.label.localeCompare(b.label));\r\n}\r\n\r\nexport function indexById(list) {\r\n    const map = Object.create(null);\r\n    (list || []).forEach(x => { if (x?.speciesId) map[x.speciesId] = x; });\r\n    return map;\r\n}\r\n"],"mappings":"AAAA;AACA,OAAO,SAASA,QAAQA,CAACC,SAAS,EAAE;EAChC,IAAI,CAACA,SAAS,EAAE,OAAO,EAAE;EACzB,MAAMC,KAAK,GAAGD,SAAS,CAACE,KAAK,CAAC,GAAG,CAAC;EAClC,MAAMC,IAAI,GAAGF,KAAK,CAACG,KAAK,CAAC,CAAC,IAAI,EAAE;EAChC,MAAMC,MAAM,GAAGC,CAAC,IAAKA,CAAC,GAAGA,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,CAAC,CAACG,KAAK,CAAC,CAAC,CAAC,GAAG,EAAG;EACrE,MAAMC,SAAS,GAAGL,MAAM,CAACF,IAAI,CAACQ,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAChD,IAAI,CAACV,KAAK,CAACW,MAAM,EAAE,OAAOF,SAAS;EACnC,OAAO,GAAGA,SAAS,KAAKT,KAAK,CAACY,GAAG,CAACC,CAAC,IAAIT,MAAM,CAACS,CAAC,CAACH,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAACI,IAAI,CAAC,GAAG,CAAC,GAAG;AACpF;AAEA,OAAO,SAASC,eAAeA,CAACC,GAAG,EAAE;EACjC,MAAMC,IAAI,GAAG,IAAIC,GAAG,CAAC,CAAC;EACtB,OAAO,CAACF,GAAG,IAAI,EAAE,EAAEG,MAAM,CAACC,CAAC,IAAI;IAC3B,MAAMC,EAAE,GAAGD,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAErB,SAAS;IACvB,IAAI,CAACsB,EAAE,EAAE,OAAO,KAAK;IACrB,IAAIJ,IAAI,CAACK,GAAG,CAACD,EAAE,CAAC,EAAE,OAAO,KAAK;IAC9BJ,IAAI,CAACM,GAAG,CAACF,EAAE,CAAC;IACZ,OAAO,IAAI;EACf,CAAC,CAAC;AACN;AAEA,OAAO,SAASG,SAASA,CAACC,IAAI,EAAE;EAC5B,OAAOA,IAAI,CACNb,GAAG,CAACQ,CAAC,KAAK;IAAEM,KAAK,EAAEN,CAAC,CAACrB,SAAS;IAAE4B,KAAK,EAAE7B,QAAQ,CAACsB,CAAC,CAACrB,SAAS;EAAE,CAAC,CAAC,CAAC,CAChE6B,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACF,KAAK,CAACI,aAAa,CAACD,CAAC,CAACH,KAAK,CAAC,CAAC;AACvD;AAEA,OAAO,SAASK,SAASA,CAACP,IAAI,EAAE;EAC5B,MAAMb,GAAG,GAAGqB,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;EAC/B,CAACT,IAAI,IAAI,EAAE,EAAEU,OAAO,CAACf,CAAC,IAAI;IAAE,IAAIA,CAAC,aAADA,CAAC,eAADA,CAAC,CAAErB,SAAS,EAAEa,GAAG,CAACQ,CAAC,CAACrB,SAAS,CAAC,GAAGqB,CAAC;EAAE,CAAC,CAAC;EACtE,OAAOR,GAAG;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}