{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ben\\\\Projects\\\\nebsojipvptrainer\\\\src\\\\components\\\\PokemonSelect.jsx\",\n  _s = $RefreshSig$();\n// src/components/PokemonSelect.jsx\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PokemonSelect({\n  id,\n  label,\n  options = [],\n  // array of strings (labels)\n  // value is intentionally ignored so the input doesn't persist after a pick\n  value,\n  // eslint-disable-line no-unused-vars\n  onChange,\n  // called ONLY on selection with the picked label\n  placeholder = \"Start typing�\",\n  maxSuggestions = 5\n}) {\n  _s();\n  const [term, setTerm] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const wrapRef = useRef(null);\n\n  // prefix/word-start matcher\n  const norm = s => String(s || \"\").toLowerCase();\n  const startsAtWord = (label, q) => {\n    const L = norm(label);\n    const Q = norm(q).trim();\n    if (!Q) return false; // don't show anything until they type\n    if (L.startsWith(Q)) return true;\n    const words = L.split(/[\\s\\-\\(\\)_]+/g).filter(Boolean);\n    return words.some(w => w.startsWith(Q));\n  };\n  const list = useMemo(() => {\n    if (!term) return [];\n    return options.filter(opt => startsAtWord(opt, term)).slice(0, maxSuggestions);\n  }, [options, term, maxSuggestions]);\n\n  // click-away to close\n  useEffect(() => {\n    function onDocClick(e) {\n      if (!wrapRef.current) return;\n      if (!wrapRef.current.contains(e.target)) setOpen(false);\n    }\n    document.addEventListener(\"mousedown\", onDocClick);\n    return () => document.removeEventListener(\"mousedown\", onDocClick);\n  }, []);\n  function pick(v) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(v);\n    setTerm(\"\"); // don�t persist text after picking\n    setOpen(false);\n  }\n  function onKeyDown(e) {\n    if (e.key === \"Enter\" && list.length > 0) {\n      e.preventDefault();\n      pick(list[0]);\n    } else if (e.key === \"Escape\") {\n      setOpen(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: wrapRef,\n    style: {\n      position: \"relative\",\n      marginBottom: 12\n    },\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      style: {\n        display: \"block\",\n        marginBottom: 6\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: id,\n      type: \"text\",\n      value: term,\n      placeholder: placeholder,\n      onFocus: () => {\n        // don�t open on focus; only after they type\n        if (term) setOpen(true);\n      },\n      onChange: e => {\n        const v = e.target.value;\n        setTerm(v);\n        setOpen(!!v); // open only when there�s text\n      },\n      onKeyDown: onKeyDown,\n      autoComplete: \"off\",\n      style: {\n        width: \"100%\",\n        border: \"1px solid #d1d5db\",\n        borderRadius: 8,\n        padding: \"8px 10px\",\n        outline: \"none\",\n        background: \"#fff\",\n        color: \"#111\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), open && list.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      role: \"listbox\",\n      \"aria-labelledby\": id,\n      style: {\n        position: \"absolute\",\n        zIndex: 1000,\n        top: \"100%\",\n        left: 0,\n        right: 0,\n        background: \"#fff\",\n        color: \"#111\",\n        border: \"1px solid #e5e7eb\",\n        borderRadius: 8,\n        boxShadow: \"0 8px 20px rgba(0,0,0,0.08)\",\n        marginTop: 6,\n        maxHeight: 220,\n        overflowY: \"auto\"\n      },\n      children: list.map((opt, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        role: \"option\",\n        onClick: () => pick(opt),\n        onMouseDown: e => e.preventDefault() // keep focus in input\n        ,\n        style: {\n          display: \"block\",\n          width: \"100%\",\n          textAlign: \"left\",\n          padding: \"10px 12px\",\n          border: \"none\",\n          background: \"transparent\",\n          cursor: \"pointer\",\n          color: \"#111\"\n        },\n        onMouseOver: e => e.currentTarget.style.background = \"#f3f4f6\",\n        onMouseOut: e => e.currentTarget.style.background = \"transparent\",\n        children: opt\n      }, `${opt}-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(PokemonSelect, \"aUjR13QvuceMeEHzuDWkLhHwt9M=\");\n_c = PokemonSelect;\nvar _c;\n$RefreshReg$(_c, \"PokemonSelect\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","jsxDEV","_jsxDEV","PokemonSelect","id","label","options","value","onChange","placeholder","maxSuggestions","_s","term","setTerm","open","setOpen","wrapRef","norm","s","String","toLowerCase","startsAtWord","q","L","Q","trim","startsWith","words","split","filter","Boolean","some","w","list","opt","slice","onDocClick","e","current","contains","target","document","addEventListener","removeEventListener","pick","v","onKeyDown","key","length","preventDefault","ref","style","position","marginBottom","children","htmlFor","display","fileName","_jsxFileName","lineNumber","columnNumber","type","onFocus","autoComplete","width","border","borderRadius","padding","outline","background","color","role","zIndex","top","left","right","boxShadow","marginTop","maxHeight","overflowY","map","i","onClick","onMouseDown","textAlign","cursor","onMouseOver","currentTarget","onMouseOut","_c","$RefreshReg$"],"sources":["C:/Users/ben/Projects/nebsojipvptrainer/src/components/PokemonSelect.jsx"],"sourcesContent":["// src/components/PokemonSelect.jsx\r\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\r\n\r\nexport default function PokemonSelect({\r\n    id,\r\n    label,\r\n    options = [],              // array of strings (labels)\r\n    // value is intentionally ignored so the input doesn't persist after a pick\r\n    value,                      // eslint-disable-line no-unused-vars\r\n    onChange,                   // called ONLY on selection with the picked label\r\n    placeholder = \"Start typing�\",\r\n    maxSuggestions = 5,\r\n}) {\r\n    const [term, setTerm] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n    const wrapRef = useRef(null);\r\n\r\n    // prefix/word-start matcher\r\n    const norm = (s) => String(s || \"\").toLowerCase();\r\n    const startsAtWord = (label, q) => {\r\n        const L = norm(label);\r\n        const Q = norm(q).trim();\r\n        if (!Q) return false;            // don't show anything until they type\r\n        if (L.startsWith(Q)) return true;\r\n        const words = L.split(/[\\s\\-\\(\\)_]+/g).filter(Boolean);\r\n        return words.some((w) => w.startsWith(Q));\r\n    };\r\n\r\n    const list = useMemo(() => {\r\n        if (!term) return [];\r\n        return options.filter((opt) => startsAtWord(opt, term)).slice(0, maxSuggestions);\r\n    }, [options, term, maxSuggestions]);\r\n\r\n    // click-away to close\r\n    useEffect(() => {\r\n        function onDocClick(e) {\r\n            if (!wrapRef.current) return;\r\n            if (!wrapRef.current.contains(e.target)) setOpen(false);\r\n        }\r\n        document.addEventListener(\"mousedown\", onDocClick);\r\n        return () => document.removeEventListener(\"mousedown\", onDocClick);\r\n    }, []);\r\n\r\n    function pick(v) {\r\n        onChange?.(v);\r\n        setTerm(\"\");         // don�t persist text after picking\r\n        setOpen(false);\r\n    }\r\n\r\n    function onKeyDown(e) {\r\n        if (e.key === \"Enter\" && list.length > 0) {\r\n            e.preventDefault();\r\n            pick(list[0]);\r\n        } else if (e.key === \"Escape\") {\r\n            setOpen(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div ref={wrapRef} style={{ position: \"relative\", marginBottom: 12 }}>\r\n            {label && (\r\n                <label htmlFor={id} style={{ display: \"block\", marginBottom: 6 }}>\r\n                    {label}\r\n                </label>\r\n            )}\r\n\r\n            <input\r\n                id={id}\r\n                type=\"text\"\r\n                value={term}\r\n                placeholder={placeholder}\r\n                onFocus={() => {\r\n                    // don�t open on focus; only after they type\r\n                    if (term) setOpen(true);\r\n                }}\r\n                onChange={(e) => {\r\n                    const v = e.target.value;\r\n                    setTerm(v);\r\n                    setOpen(!!v); // open only when there�s text\r\n                }}\r\n                onKeyDown={onKeyDown}\r\n                autoComplete=\"off\"\r\n                style={{\r\n                    width: \"100%\",\r\n                    border: \"1px solid #d1d5db\",\r\n                    borderRadius: 8,\r\n                    padding: \"8px 10px\",\r\n                    outline: \"none\",\r\n                    background: \"#fff\",\r\n                    color: \"#111\",\r\n                }}\r\n            />\r\n\r\n            {open && list.length > 0 && (\r\n                <div\r\n                    role=\"listbox\"\r\n                    aria-labelledby={id}\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        zIndex: 1000,\r\n                        top: \"100%\",\r\n                        left: 0,\r\n                        right: 0,\r\n                        background: \"#fff\",\r\n                        color: \"#111\",\r\n                        border: \"1px solid #e5e7eb\",\r\n                        borderRadius: 8,\r\n                        boxShadow: \"0 8px 20px rgba(0,0,0,0.08)\",\r\n                        marginTop: 6,\r\n                        maxHeight: 220,\r\n                        overflowY: \"auto\",\r\n                    }}\r\n                >\r\n                    {list.map((opt, i) => (\r\n                        <button\r\n                            key={`${opt}-${i}`}\r\n                            role=\"option\"\r\n                            onClick={() => pick(opt)}\r\n                            onMouseDown={(e) => e.preventDefault()} // keep focus in input\r\n                            style={{\r\n                                display: \"block\",\r\n                                width: \"100%\",\r\n                                textAlign: \"left\",\r\n                                padding: \"10px 12px\",\r\n                                border: \"none\",\r\n                                background: \"transparent\",\r\n                                cursor: \"pointer\",\r\n                                color: \"#111\",\r\n                            }}\r\n                            onMouseOver={(e) => (e.currentTarget.style.background = \"#f3f4f6\")}\r\n                            onMouseOut={(e) => (e.currentTarget.style.background = \"transparent\")}\r\n                        >\r\n                            {opt}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}